# Generated by Django 4.1.7 on 2023-03-18 20:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalSalesChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Доп.канал продажи',
                'verbose_name_plural': 'Доп.каналы продажи',
            },
        ),
        migrations.CreateModel(
            name='AgentInstaller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Агент-инсталлятор',
                'verbose_name_plural': 'Агенты-инсталляторы',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Название клиента')),
                ('INN', models.PositiveBigIntegerField(verbose_name='ИНН')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='Installer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('surname', models.CharField(max_length=50, verbose_name='Отчество')),
            ],
            options={
                'verbose_name': 'Инсталлятор',
                'verbose_name_plural': 'Инсталляторы',
            },
        ),
        migrations.CreateModel(
            name='IPTVTariffPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тарифный план IPTV',
                'verbose_name_plural': 'Тарифные планы IPTV',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.CreateModel(
            name='StatusGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Группа статуса',
                'verbose_name_plural': 'Группы статусов',
            },
        ),
        migrations.CreateModel(
            name='TariffPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тарифный план',
                'verbose_name_plural': 'Тарифные планы',
            },
        ),
        migrations.CreateModel(
            name='TVPPresence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=10, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Наличие ТВП',
                'verbose_name_plural': 'Наличие ТВП',
            },
        ),
        migrations.CreateModel(
            name='TVPTestType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=10, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип проверки ТВП',
                'verbose_name_plural': 'Типы проверок ТВП',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='statuses', to='connection_requests.statusgroup', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Статус заявки',
                'verbose_name_plural': 'Статусы заявок',
                'ordering': ('group', 'title'),
            },
        ),
        migrations.CreateModel(
            name='ConnectionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(verbose_name='Номер заявки')),
                ('date_entered_status', models.DateTimeField(verbose_name='Дата входа заявки в статус')),
                ('reg_date', models.DateTimeField(verbose_name='Дата регистрации')),
                ('reg_date_for_request', models.DateTimeField(null=True, verbose_name='Дата регистрации под заявки')),
                ('reg_date_brigade_for_TVP', models.DateTimeField(null=True, verbose_name='Регистрация наряда на ТВП')),
                ('rejection_date', models.DateTimeField(null=True, verbose_name='Дата отклонения под заявки')),
                ('completion_TVP_date', models.DateTimeField(null=True, verbose_name='Завершение проверки ТВП')),
                ('TVP_check_duration', models.TimeField(null=True, verbose_name='Длительность проверки ТВП')),
                ('agreed_connection_date', models.DateTimeField(blank=True, null=True, verbose_name='Согласованная дата подключения')),
                ('comment_TVP_ShPD', models.CharField(blank=True, max_length=250, verbose_name='Комментарий ТВП ШПД')),
                ('id_agreement_KURS', models.CharField(blank=True, max_length=250, verbose_name='ID Договор КУРС')),
                ('note', models.CharField(blank=True, max_length=250, verbose_name='Примечание')),
                ('contact_phone_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Контактный телефон')),
                ('contact_person', models.CharField(blank=True, max_length=200, verbose_name='Контактное лицо')),
                ('TP_ShPD_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Стоимость ТП (ШПД)')),
                ('TP_IPTV_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Стоимость ТП (IPTV)')),
                ('contract_created_by_fio', models.CharField(blank=True, max_length=250, verbose_name='ФИО сотрудника создавшего договор')),
                ('access_card_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Номер карты доступа')),
                ('IPTV_access_card_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Номер карты доступа IPTV')),
                ('client_number_SUS', models.PositiveIntegerField(blank=True, null=True, verbose_name='№ клиентский СУС')),
                ('sending_date_APTV', models.DateTimeField(blank=True, null=True, verbose_name='Дата отправки на АПТВ')),
                ('finishing_date_APTV_planned', models.DateTimeField(blank=True, null=True, verbose_name='Дата окончания АПТВ планируемая')),
                ('finishing_date_APTV_actual', models.DateTimeField(blank=True, null=True, verbose_name='Дата окончания АПТВ фактическая')),
                ('APTV_duration', models.TimeField(blank=True, null=True, verbose_name='Длительность этапа АПТВ')),
                ('sending_date_DO', models.DateTimeField(blank=True, null=True, verbose_name='Дата отправки на ДО')),
                ('finishing_date_DO_planned', models.DateTimeField(blank=True, null=True, verbose_name='Дата окончания ДО планируемая')),
                ('finishing_date_DO_actual', models.DateTimeField(blank=True, null=True, verbose_name='Дата окончания ДО фактическая')),
                ('DO_duration', models.TimeField(blank=True, null=True, verbose_name='Длительность этапа ДО')),
                ('IPTV_tariff_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='connection_requests', to='connection_requests.iptvtariffplan', verbose_name='Тарифный план IPTV')),
                ('TVP_presence', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='connection_requests', to='connection_requests.tvppresence', verbose_name='Наличие ТВП')),
                ('TVP_test_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='connection_requests', to='connection_requests.tvptesttype', verbose_name='Тип проверки ТВП')),
                ('additional_sales_channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='connection_requests', to='connection_requests.additionalsaleschannel', verbose_name='Доп.канал продаж')),
                ('agent_installer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='connection_requests', to='connection_requests.agentinstaller', verbose_name='Агент-инсталлятор')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='connection_requests', to='connection_requests.client', verbose_name='Клиент')),
                ('completed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='completed_connection_requests', to=settings.AUTH_USER_MODEL, verbose_name='Оператор завершивший заявку')),
                ('installer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='connection_requests', to='connection_requests.installer', verbose_name='Инсталлятор')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='connection_requests', to='connection_requests.service', verbose_name='Услуга')),
                ('started_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='started_connection_requests', to=settings.AUTH_USER_MODEL, verbose_name='Оператор заводивший заявку')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='connection_requests', to='connection_requests.status', verbose_name='Статус заявки')),
                ('tariff_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='connection_requests', to='connection_requests.tariffplan', verbose_name='Тарифный план')),
            ],
            options={
                'verbose_name': 'Заявка на подключение',
                'verbose_name_plural': 'Заявки на подключение',
            },
        ),
    ]
